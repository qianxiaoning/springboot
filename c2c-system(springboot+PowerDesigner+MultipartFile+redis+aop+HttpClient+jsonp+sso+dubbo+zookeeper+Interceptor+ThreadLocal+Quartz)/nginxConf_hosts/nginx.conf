
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # springboot/springboot02(springboot+actuator+devtools+lombok+nginx+aop+@Transactional+@Cacheable+shiro+InterceptorRegistry+@Async(thread pool)+vue)项目nginx配置
	server{
        listen  80;#浏览器输入端口
        server_name  www.springboot02.com;#浏览器输入域名

        # www.springboot02.com/请求映射为http://localhost:8080/
        location / { 
            proxy_pass http://localhost:8080/; #前端页面地址		
        }
        # www.springboot02.com/api/请求映射为http://192.168.0.107:84/
		location /api/ {
			# proxy_pass   http://192.168.0.100:844/; #后台接口地址(家里)            
			proxy_pass   http://192.168.35.18:844/; #后台接口地址(阳公司)            
        }
    }

    # c2c-system项目nginx配置
    # 后台站点配置
	server{
        listen  80;#浏览器输入端口
        server_name  manage.c2c-system.com;#浏览器输入域名

        location / { 
            proxy_pass http://localhost:8081/; #前端页面地址		
        }
		location /api/ {
			proxy_pass   http://192.168.0.105:8071/; #后台接口地址(家里)            
            # 真实ip地址
            proxy_set_header X-Real-IP $remote_addr;
            # 真实ip端口
            proxy_set_header X-Real-Port $remote_port;
            # 代理转发代理时
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_pass   http://192.168.35.18:844/; #后台接口地址(阳公司)                    
            # proxy_pass   http://c2cSystemWindows/;# windows集群
            # proxy_pass   http://c2cSystemLinux/;# linux集群
        }
    }    
    # 前台站点配置
	server{
        listen  80;#浏览器输入端口
        server_name  www.c2c-system.com;#浏览器输入域名

        location / { 
            proxy_pass http://localhost:8082/; #前端页面地址		
        }
		location /api/ {
			proxy_pass   http://192.168.0.105:8072/; #后台接口地址(家里)            
            # 真实ip地址
            proxy_set_header X-Real-IP $remote_addr;
            # 真实ip端口
            proxy_set_header X-Real-Port $remote_port;
            # 代理转发代理时
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_pass   http://192.168.35.18:844/; #后台接口地址(阳公司)                    
            # proxy_pass   http://c2cSystemWindows/;# windows集群
            # proxy_pass   http://c2cSystemLinux/;# linux集群
        }
    }    
    # sso服务器配置
	server{
        listen  80;#浏览器输入端口
        server_name  sso.c2c-system.com;#浏览器输入域名

		location / {
			proxy_pass   http://192.168.0.105:8073/; #后台接口地址(家里)            			
            # 真实ip地址
            proxy_set_header X-Real-IP $remote_addr;
            # 真实ip端口
            proxy_set_header X-Real-Port $remote_port;
            # 代理转发代理时
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }        
    # 图片服务器
    server{
        listen  80;#浏览器输入端口
        server_name  image.c2c-system.com;#浏览器输入域名

        location / { 
            # 文件目录
            root D:/qxn/file/testFileFolder/;
        }        
    }
    # 配置windows tomcat集群
    # 1.轮询（较多）
    upstream c2cSystemWindows {
        server 127.0.0.1:8061;
        server 127.0.0.1:8062;
        server 127.0.0.1:8063;
    }
    # 2.权重（按性能分配请求数，越大请求数越多）
    # upstream c2cSystemWindows {
    #     server 127.0.0.1:8061 weight=6;
    #     server 127.0.0.1:8062 weight=3;
    #     server 127.0.0.1:8063 weight=1;
    # }
    # 3.IPHASH（session中的登录信息，在多个集群服务器中未共享，会导致频繁登录。IPHASH通过对ip地址运算，使某一ip访问固定分配某一台服务器，以实现均衡）    
    # 弊端：负载不均
    # upstream c2cSystemWindows {
    #     # 开启IPHASH策略
    #     ip_hash;
    #     server 127.0.0.1:8061;
    #     server 127.0.0.1:8062;
    #     server 127.0.0.1:8063;
    # }
    # 配置linux tomcat集群
    # 1.轮询（较多）
    upstream c2cSystemLinux {
        server 192.168.89.129:8061;
        server 192.168.89.129:8062;
        server 192.168.89.129:8063;
    }
}
